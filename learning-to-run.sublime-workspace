{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"stat",
				"state_description\tparam"
			],
			[
				"o",
				"observation_shape\tparam"
			],
			[
				"acti",
				"action_repeat\tparam"
			],
			[
				"de",
				"default"
			],
			[
				"add",
				"add_step_time\tfunction"
			],
			[
				"step",
				"step_time"
			],
			[
				"com",
				"combined_stats\tparam"
			],
			[
				"ste",
				"step_time\tparam"
			],
			[
				"a",
				"append\tfunction"
			],
			[
				"sta",
				"start_step_time\tstatement"
			],
			[
				"i",
				"info\tfunction"
			],
			[
				"base",
				"baselines\tmodule"
			],
			[
				"va",
				"var\tfunction"
			],
			[
				"gl",
				"global_step\tstatement"
			],
			[
				"pl",
				"plot_distance\tfunction"
			],
			[
				"summary_me",
				"summary_dist_mean\tstatement"
			],
			[
				"su",
				"summary_dist_mean\tstatement"
			],
			[
				"tf_dis",
				"tf_distance_mean\tstatement"
			],
			[
				"tf_",
				"tf_distance"
			],
			[
				"me",
				"tf_mean"
			],
			[
				"impo",
				"import"
			],
			[
				"open",
				"opensim\tmodule"
			],
			[
				"n",
				"netifaces\tmodule"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "from baselines.ddpg.memory import Memory\nfrom itertools import product\n\n\nclass ReplayBufferFlip(Memory):\n\n    def __init__(self, limit, action_shape, observation_shape, flip_state, state_description):\n        super(limit, action_shape, observation_shape)\n        self.flip_state = flip_state\n        self.left_idx = get_idx(state_description, \"_l\")\n        self.right_idx = get_idx(state_description, \"_r\")\n\n    def sample(self, batch_size):\n        # TODO need to override to implement flipped actions\n        pass\n\n    def env_features_names(self):\n        names = ['pelvis_' + var for var in ['y', 'vx', 'vy', 'ax', 'ay', 'rz', 'vrz', 'arz']]\n        names += [body_part + \"_\" + var for (body_part, var) in product(['head', 'torso', 'toes_left', 'toes_right', 'talus_left', 'talus_right'], ['x', 'y', 'vx', 'vy', 'ax', 'ay', 'rz', 'vrz', 'arz'])]\n        names += [body_part + \"_\" + var for (body_part, var) in product(['ankle_left', 'ankle_right', 'back', 'hip_left', 'hip_right', 'knee_left', 'knee_right'], ['rz', 'vrz', 'arz'])]\n        names += ['center_of_mass' + var for var in ['x', 'y', 'vx', 'vy', 'ax', 'ay', 'ofg']]\n        return names\n\n\n\n    def  get_idx(self, desc, side):\n        pass",
			"file": "osim/replay_buffer.py",
			"file_size": 347,
			"file_write_time": 131703359834836206,
			"settings":
			{
				"buffer_size": 1203,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/emiliano/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
			"settings":
			{
				"buffer_size": 26,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/emiliano/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
			"settings":
			{
				"buffer_size": 21437,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Add logs: \n- distance OK\n- Save net weights (every eval)\n- Visualization script: restore net and apply policy\n- Reward scaling OK\n- Action repeat OK\n- Observation transform frame: Move reference frame to the one of the pelvis\n- Check network size\n",
			"file": "todo.txt",
			"file_size": 297,
			"file_write_time": 131703443849518941,
			"settings":
			{
				"buffer_size": 247,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 274.0,
		"last_filter": "insta",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 497.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/emiliano/devel/python_projects/learning-to-run"
	],
	"file_history":
	[
		"/home/emiliano/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/emiliano/devel/python_projects/learning-to-run/osim/run.sh",
		"/home/emiliano/devel/python_projects/learning-to-run/osim/main.py",
		"/home/emiliano/devel/python_projects/learning-to-run/osim/model.py",
		"/home/emiliano/devel/python_projects/learning-to-run/osim/training.py",
		"/home/emiliano/devel/python_projects/learning-to-run/macchininarossarossa_example/training.py",
		"/home/emiliano/devel/python_projects/learning-to-run/err.log",
		"/home/emiliano/devel/python_projects/learning-to-run/out.log",
		"/home/emiliano/devel/python_projects/learning-to-run/macchininarossarossa_example/run.sh",
		"/home/emiliano/devel/python_projects/learning-to-run/.gitignore",
		"/home/emiliano/devel/python_projects/learning-to-run/..gitignore.swp",
		"/home/emiliano/devel/python_projects/learning-to-run/learning-to-run.sublime-project",
		"/home/emiliano/devel/python_projects/learning-to-run/test.py",
		"/home/emiliano/devel/python_projects/learning-to-run/macchininarossarossa_example/main.py",
		"/home/emiliano/.config/sublime-text-3/Packages/Anaconda/README.md",
		"/home/emiliano/ciao.py",
		"/home/emiliano/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"_",
			"summary",
			"print",
			"sublime"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"-"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "osim/replay_buffer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1203,
						"regions":
						{
						},
						"selection":
						[
							[
								435,
								435
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/emiliano/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/emiliano/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21437,
						"regions":
						{
						},
						"selection":
						[
							[
								8914,
								8914
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3419.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "todo.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 247,
						"regions":
						{
						},
						"selection":
						[
							[
								247,
								247
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "learning-to-run.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/devel/ampl-programs/ampl.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 156.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
